# This example config shows how to use Bitrise Pipelines
# to run UI tests on multiple devices in parallel

format_version: "11"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: android

meta:
  bitrise.io:
    stack: linux-docker-android-20.04
    machine_type_id: elite

pipelines:
  ui_test_on_multiple_devices:
    stages:
    - build_for_ui_testing: { }
    - run_ui_tests_on_devices: { }

stages:
  build_for_ui_testing:
    workflows:
    - build_for_ui_testing: { }

  run_ui_tests_on_devices:
    workflows:
    - ui_test_on_phone: { }
    - ui_test_on_tablet: { }
    - ui_test_on_foldable: { }

workflows:
  build_for_ui_testing:
    steps:
    - git-clone: { }
    - android-build-for-ui-testing:
        inputs:
        - module: app
        - variant: debug
    - deploy-to-bitrise-io: { }

  ui_test_on_phone:
    envs:
    - EMULATOR_PROFILE: pixel_5
    before_run:
    - _pull_apks
    after_run:
    - _run_tests

  ui_test_on_tablet:
    envs:
    - EMULATOR_PROFILE: 10.1in WXGA (Tablet)
    before_run:
    - _pull_apks
    after_run:
    - _run_tests

  ui_test_on_foldable:
    envs:
    - EMULATOR_PROFILE: 8in Foldable
    before_run:
    - _pull_apks
    after_run:
    - _run_tests

  _pull_apks:
    steps:
    - git::https://github.com/bitrise-steplib/bitrise-step-artifact-pull.git@main:
        inputs:
        - artifact_sources: build_for_ui_testing.build_for_ui_testing.*
        - export_map: |-
            BITRISE_APK_PATH: .*app-debug.apk
            BITRISE_TEST_APK_PATH: .*app-debug-androidTest.apk

  _run_tests:
    steps:
    - avd-manager:
        inputs:
        - profile: $EMULATOR_PROFILE
    - wait-for-android-emulator: { }
    - android-instrumented-test: { }
